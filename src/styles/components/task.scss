@use 'sass:color';

@use '/styles/shared' as *;

$task-font-size: $normal-font-size;
$checkbox-size: $task-font-size;
$task-title-line-height: $task-font-size * 1.25;
$task-title-lines-number: 3;
$task-gap: 10px;
$indicators-size: $task-font-size;

@mixin there-is-chosen {
  :root:has(.chosen) {
    @content
  }
}

.task {
  background-color: white;
  border-radius: 10px;
  transition: background-color 0.2s;
  padding: 10px;
  
  @include button(white);

  &.drag {
    padding: 8px;
    border: 2px dashed black;
  }

  &.ghost {
    background-color: rgb(0 0 0 / .1);
    color: rgb(0 0 0 / 0);
    & * {
      transition: none;
      opacity: 0;
    }
  }
}

.task__title-box {
  align-items: start;
  display: flex;
  gap: $task-gap;
  position: relative;
  
  &:has(.task__checkbox:checked) {
    text-decoration: line-through;
    opacity: 50%;
  }
}

.task__checkbox {
  margin-top: $checkbox-size * 0.125;
  width: $checkbox-size;
  height: $checkbox-size;
  
  @include has-hover {
    opacity: 0;
    .task:hover & {
      opacity: 1;
    }
  }
  
  &:checked, &:active {
    opacity: 1;
  }
}

.task__title {
  display: block;
  display: -webkit-box;
  line-clamp: $task-title-lines-number;
  -webkit-line-clamp: $task-title-lines-number;
  -webkit-box-orient: vertical;
  overflow: hidden;
  transition: margin-left 0.2s;
  line-height: $task-title-line-height;
  max-height: $task-title-line-height * $task-title-lines-number;
  width: calc(100% - $checkbox-size - $task-gap);
  
  @include has-hover() {
    margin-left: -$checkbox-size - $task-gap;
  }

  *:not(.has-dragging) > .task:hover & {
    margin-left: 0;
    opacity: 1;
  }

  .task:has(.task__checkbox:checked) & {
    margin-left: 0;
    opacity: 1;
  }
}


.task__action-button {
  padding: 4px;
  border-radius: 5px;
  transition: background-color 0.2s;
  position: absolute;
  right: 0;

  @include transparent-button();

  &:after {
    content: '';
    display: block;
    width: 16px;
    height: 16px;
    @include coloredIcon(url('/images/icons/actions.svg'));
  }
}


.task__indicators-box {
  --indicator-size: 13px;
  --indicator-color: #{$secondary-text-color};

  display: flex;
  gap: 10px;

  &:not(:first-child) {
    margin-top: 10px;
  }
}


.task__indicator {
  color: var(--indicator-color);
  font-size: var(--indicator-size);
  display: flex;
  gap: 3px;
}

.task__indicator-icon {
  width: var(--indicator-size);
  height: var(--indicator-size);

  .task__indicator--description & {
    @include coloredIcon(url('/images/icons/description.svg'), var(--indicator-color));
  }

  .task__indicator--subtasks & {
    @include coloredIcon(url('/images/icons/subtask.svg'), var(--indicator-color));
  }

  .task__indicator--due-date & {
    @include coloredIcon(url('/images/icons/calendar.svg'), var(--indicator-color));
  }

  .task__indicator--priority & {
    @include coloredIcon(url('/images/icons/flag.svg'), var(--indicator-color));
  }
}